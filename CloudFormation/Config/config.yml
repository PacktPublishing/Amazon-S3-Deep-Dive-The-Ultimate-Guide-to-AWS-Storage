AWSTemplateFormatVersion: 2010-09-09
Description: 'AWS Config Rule to ensure that S3 buckets are not pubically accessible'

Parameters:

  IsConfigInUse:
    Type: String
    Description: "Is AWS Config in use in your account already? Enter True or False"
    AllowedValues:
      - true
      - false
  ConfigBucketName:
    Type: String
    Description: "Name of bucket that AWS Config will use for logs"
    AllowedPattern: ^([a-z]|(\d(?!\d{0,2}\.\d{1,3}\.\d{1,3}\.\d{1,3})))([a-z\d]|(\.(?!(\.|-)))|(-(?!\.))){1,61}[a-z\d\.]$
  EmailAddress:
    Type: String
    Description: "Enter email address for AWS Config alerts"
    AllowedPattern: ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{2,})$

Conditions:

  ConfigDoesNotExist: !Equals [!Ref IsConfigInUse, "false"]

Resources:

  AWSConfigRule:
    Type: AWS::Config::ConfigRule
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: "S3-Public-Read-Config-Rule"
      Description: "Checks that S3 buckets do not allow Public access"
      Scope:
        ComplianceResourceTypes:
          - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: "S3_BUCKET_PUBLIC_READ_PROHIBITED"

  ConfigDelivery:
    Type: AWS::Config::DeliveryChannel
    Condition: ConfigDoesNotExist
    DependsOn: ConfigTopic
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: Six_Hours
      S3BucketName: !Ref ConfigBucketName
      SnsTopicARN: !Ref ConfigTopic

  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Condition: ConfigDoesNotExist
    Properties:
      Name: "AWSConfigRecorder"
      RecordingGroup:
        ResourceTypes:
          - AWS::S3::Bucket
      RoleARN: !GetAtt ConfigRole.Arn

  ConfigTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "AWS-Config-Notifications"
      TopicName: "AWS-Config-Notifications"
      Subscription:
      - Endpoint: !Ref EmailAddress
        Protocol: email

  SNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    DependsOn: ConfigTopic
    Properties:
      PolicyDocument:
        Id: SNSTopicPolicy
        Version: '2012-10-17'
        Statement:
        - Sid: My-statement-id
          Effect: Allow
          Principal: "*"
          Action:
            - sns:Publish
            - sns:RemovePermission
            - sns:SetTopicAttributes
            - sns:DeleteTopic
            - sns:ListSubscriptionsByTopic
            - sns:GetTopicAttributes
            - sns:Receive
            - sns:AddPermission
            - sns:Subscribe
          Resource: "*"
      Topics:
      - !Ref ConfigTopic

  ConfigRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "config.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSConfigRole
      RoleName: "ConfigRole"
      Policies:
        -
          PolicyName: "ConfigPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "config:Put*"
                Resource: "*"
              -
                Effect: "Allow"
                Action:
                  - "s3:PutObject*"
                Resource: "*"
